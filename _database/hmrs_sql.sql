-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email character varying(100) NOT NULL,
    password character varying(100) NOT NULL,
    isactive boolean NOT NULL,
    createddate date NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
	CONSTRAINT UK_users_email UNIQUE(email)
);

CREATE TABLE public.employees
(
    userid integer NOT NULL,
    firstname character varying(50) NOT NULL,
    lastname character varying(50) NOT NULL,
    CONSTRAINT pk_employees PRIMARY KEY (userid),
	CONSTRAINT fk_employees_users FOREIGN KEY (userid)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.candidates
(
    userid integer NOT NULL,
    firstname character varying(50) NOT NULL,
    lastname character varying(50) NOT NULL,
    nationalityid character(11) NOT NULL,
    dateofbirth date NOT NULL,
	CONSTRAINT pk_candidates PRIMARY KEY (userid),
	CONSTRAINT UK_candidates_nationalityid UNIQUE(nationalityid),
	CONSTRAINT fk_candidates_users FOREIGN KEY (userid)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.employers
(
    userid integer NOT NULL,
    companyname character varying(150) NOT NULL,
    webaddress character varying(75) NOT NULL,
    phonenumber character varying(20) NOT NULL,
    CONSTRAINT pk_employers PRIMARY KEY (userid),
	CONSTRAINT fk_employers_users FOREIGN KEY (userid)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.verificationemails
(
    id integer NOT NULL,
    userid integer NOT NULL,
    verificationcode character varying(50) NOT NULL,
    verificationdate date NOT NULL,
    CONSTRAINT pk_verificationemails PRIMARY KEY (id),
	CONSTRAINT UK_verificationemails_verificationcode UNIQUE(verificationcode),
	CONSTRAINT fk_verificationemails_users FOREIGN KEY (userid)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE public.job_positions
(
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    CONSTRAINT pk_jobpositions PRIMARY KEY (id),
	CONSTRAINT UK_jobpositions_name UNIQUE(name)
);


END;